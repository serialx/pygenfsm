[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pygenfsm"
version = "0.1.0"
description = "A minimal, clean, typed and async-native FSM (Finite State Machine) implementation inspired by Erlang's gen_fsm"
readme = "README.md"
license = "MIT"
authors = [
    { name = "SerialX", email = "serialx@serialx.net" },
]
maintainers = [
    { name = "SerialX", email = "serialx@serialx.net" },
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
keywords = [
    "fsm",
    "finite-state-machine",
    "state-machine",
    "async",
    "asyncio",
    "erlang",
    "gen_fsm",
    "state-management",
    "workflow",
    "automation",
    "typed",
    "event-driven"
]

[project.urls]
Homepage = "https://github.com/serialx/pygenfsm"
Repository = "https://github.com/serialx/pygenfsm"
Issues = "https://github.com/serialx/pygenfsm/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/pygenfsm"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pyright>=1.1.350",
    "ruff>=0.3.0",
    "pre-commit>=3.3.3",
]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501"]  # Line length

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"examples/*" = ["D", "T20"]

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
# see https://github.com/microsoft/pyright/issues/7771, we don't want to error on decorated functions in tests
# which are not otherwise used
executionEnvironments = [
  { root = "tests", reportUnusedFunction = false },
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
    "--cov=pygenfsm",
    "--cov-report=term-missing",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"